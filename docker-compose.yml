services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx.crt:/etc/nginx/nginx.crt
      - ./nginx.key:/etc/nginx/nginx.key
    depends_on:
      - fastapi
      - react

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/postgres
      - TZ=America/New_York

  react:
    image: node:alpine
    entrypoint: /bin/sh
    command: -c "npm i && npm run dev"
    ports:
      - 8000:8000
    working_dir: /srv/app
    volumes:
      - type: bind
        source: ./frontend
        target: /srv/app
    tty: true
    depends_on:
      - fastapi
      
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
    driver: local
    